[{"/Users/bj/PriceModels/pricemodels-react/src/index.js":"1","/Users/bj/PriceModels/pricemodels-react/src/App.js":"2","/Users/bj/PriceModels/pricemodels-react/src/reportWebVitals.js":"3","/Users/bj/PriceModels/pricemodels-react/src/components/stockdata-list.component.js":"4","/Users/bj/PriceModels/pricemodels-react/src/services/stockData.services.js":"5","/Users/bj/PriceModels/pricemodels-react/src/http-common.js":"6","/Users/bj/PriceModels/pricemodels-react/src/components/candlesticksGraph.component.js":"7"},{"size":556,"mtime":1613543829099,"results":"8","hashOfConfig":"9"},{"size":1147,"mtime":1619957166824,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1610792046215,"results":"11","hashOfConfig":"9"},{"size":4298,"mtime":1621651416988,"results":"12","hashOfConfig":"9"},{"size":514,"mtime":1619700813389,"results":"13","hashOfConfig":"9"},{"size":153,"mtime":1616335015269,"results":"14","hashOfConfig":"9"},{"size":949,"mtime":1618930210354,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1pj8czs",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"18"},"/Users/bj/PriceModels/pricemodels-react/src/index.js",[],["35","36"],"/Users/bj/PriceModels/pricemodels-react/src/App.js",["37"],"import logo from './logo.svg';\nimport React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './App.css';\nimport {Switch, Route, Link} from \"react-router-dom\";\nimport StockDataList from \"./components/stockdata-list.component\"\nimport CandleSticksGraph from './components/candlesticksGraph.component';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n          <a href=\"/\" className=\"navbar-brand\">\n            PricingOptions\n        </a>\n          <div className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/stockData\"} className=\"nav-link\">\n                Stock Data\n            </Link>\n            </li>\n          </div>\n        </nav>\n\n        <div className=\"container mt-3\">\n          <Switch>\n            <Route exact path={[\"/\", \"/stockData\"]} component={StockDataList} />\n          </Switch>\n          <Switch>\n            <Route exact path={[\"/\",\"/stockData\"]} component={CandleSticksGraph}/>\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/Users/bj/PriceModels/pricemodels-react/src/reportWebVitals.js",[],"/Users/bj/PriceModels/pricemodels-react/src/components/stockdata-list.component.js",["38","39","40","41","42","43","44","45","46"],"import classes from \"./BarGraph.module.css\";\nimport React, { Component, useMemo, useState, useEffect } from \"react\";\nimport StockDataService from \"../services/stockData.services\";\nimport {Chart, BarController, registerables} from \"chart.js\";\n//import {Link} from \"react-router-dom\";\n\nexport default class StockDataList extends Component {\n\n\n    constructor(props) {\n        super(props);\n        this.retrieveStockData = this.retrieveStockData.bind(this);\n        this.addStockData = this.addStockData.bind(this);\n        this.refreshList = this.refreshList.bind(this);\n        this.deleteStockData = this.deleteStockData.bind(this);\n\n        this.state = {\n            stockData: [],\n            currentStockData: null,\n            currentIndex: -1,\n        };\n    }\n\n    chartRef = React.createRef();\n\n    componentDidMount() {\n        this.addStockData();\n        this.retrieveStockData();\n\n\n\n        console.log(this.state.stockData);\n    }\n\n    componentDidUpdate(prevProps, prevState){\n        \n\n\n\n        \n    }\n\n    addStockData() {\n        StockDataService.create()\n            .then(response => {\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n\n    deleteStockData() {\n        StockDataService.deleteAll()\n            .then(response => {\n                this.setState({\n                    stockData: []\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    setActiveStockData(stockData, index) {\n        this.setState({\n            currentStockData: stockData,\n            currentIndex: index\n        })\n    }\n\n    retrieveStockData() {\n        StockDataService.getAll()\n            .then(response => {\n                this.setState({\n                    stockData: response.data\n                });\n                const myChartRef = this.chartRef.current.getContext(\"2d\");\n                var candlesticks = new Chart(myChartRef, {\n                    type: \"bar\",\n                    data: {\n                        labels: this.state.stockData.map( x => {\n                            return x.time;\n                        }),\n                        datasets: [\n                            {\n                                label: \"open\",\n                                data: this.state.stockData.map ( x => {\n                                    return x[\"1. open\"];\n                                })\n                            }\n                        ]\n                    }\n                })\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n    refreshList() {\n        this.addStockData();\n        this.retrieveStockData();\n        this.deleteStockData();\n        this.setState({\n            currentStockData: null,\n            currentIndex: -1\n        });\n    }\n\n\n    render() {\n        const { stockData, currentIndex, currentStockData } = this.state;\n        return (\n            <div className=\"list row\">\n                <div className=\"col-md-6\">\n                    <h4>StockData</h4>\n                    {/*\n                    <ul className=\"list-group\">\n                        {stockData &&\n                            stockData.map((stockDatum, index) => (\n                                <li className={\n                                    \"list-group-item\" + (index === currentIndex ? \"active\" : \"\")\n                                }\n                                    onPointerOver={() => this.setActiveStockData(stockDatum, index)}\n                                    key={index}>\n                                    {stockDatum[\"1. open\"], stockDatum[\"2. high\"], stockDatum[\"3. low\"], stockDatum[\"4. close\"], stockDatum[\"5. volume\"]}\n                                </li>\n                            ))}\n                            </ul>*/}\n                    <div className={classes.graphContainer}>\n                        <canvas\n                            id=\"chart\"\n                            ref={this.chartRef}/>\n                    </div>\n                    <div>\n\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","/Users/bj/PriceModels/pricemodels-react/src/services/stockData.services.js",[],"/Users/bj/PriceModels/pricemodels-react/src/http-common.js",[],["47","48"],"/Users/bj/PriceModels/pricemodels-react/src/components/candlesticksGraph.component.js",["49","50"],"import React, { Component } from \"react\";\nimport classes from \"./BarGraph.module.css\";\nimport {Chart, BarController, registerables} from \"chart.js\";\n\nChart.register(...registerables);\n\n\nexport default class CandleSticksGraph extends Component{\n    chartref = React.createRef();\n\n    componentDidMount() {\n        const myChartRef = this.chartref.current.getContext(\"2d\");\n\n        var candlesticks = new Chart(myChartRef, {\n            type: \"bar\",\n            data: {\n                labels: [\"Jan\",\"Feb\"],\n                datasets: [\n                    {\n                        label: \"Sales\",\n                        data: [86,87],\n                    }\n                ]\n            }\n        })\n    }\n\n    render(){\n        return(\n            <div className={classes.graphContainer}>\n                <canvas\n                    id=\"myChart\"\n                    ref={this.chartref}\n                    />\n            </div>\n        )\n    }\n}\n",{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":1,"column":8,"nodeType":"57","messageId":"58","endLine":1,"endColumn":12},{"ruleId":"55","severity":1,"message":"59","line":2,"column":28,"nodeType":"57","messageId":"58","endLine":2,"endColumn":35},{"ruleId":"55","severity":1,"message":"60","line":2,"column":37,"nodeType":"57","messageId":"58","endLine":2,"endColumn":45},{"ruleId":"55","severity":1,"message":"61","line":2,"column":47,"nodeType":"57","messageId":"58","endLine":2,"endColumn":56},{"ruleId":"55","severity":1,"message":"62","line":4,"column":16,"nodeType":"57","messageId":"58","endLine":4,"endColumn":29},{"ruleId":"55","severity":1,"message":"63","line":4,"column":31,"nodeType":"57","messageId":"58","endLine":4,"endColumn":44},{"ruleId":"55","severity":1,"message":"64","line":81,"column":21,"nodeType":"57","messageId":"58","endLine":81,"endColumn":33},{"ruleId":"55","severity":1,"message":"65","line":115,"column":17,"nodeType":"57","messageId":"58","endLine":115,"endColumn":26},{"ruleId":"55","severity":1,"message":"66","line":115,"column":28,"nodeType":"57","messageId":"58","endLine":115,"endColumn":40},{"ruleId":"55","severity":1,"message":"67","line":115,"column":42,"nodeType":"57","messageId":"58","endLine":115,"endColumn":58},{"ruleId":"51","replacedBy":"68"},{"ruleId":"53","replacedBy":"69"},{"ruleId":"55","severity":1,"message":"62","line":3,"column":16,"nodeType":"57","messageId":"58","endLine":3,"endColumn":29},{"ruleId":"55","severity":1,"message":"64","line":14,"column":13,"nodeType":"57","messageId":"58","endLine":14,"endColumn":25},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useMemo' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'BarController' is defined but never used.","'registerables' is defined but never used.","'candlesticks' is assigned a value but never used.","'stockData' is assigned a value but never used.","'currentIndex' is assigned a value but never used.","'currentStockData' is assigned a value but never used.",["70"],["71"],"no-global-assign","no-unsafe-negation"]